{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nome do Data Factory",
			"defaultValue": "datafactory-3p1l"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/run_optimize')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "run_optimize",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/Optimize"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "General"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/serving_customer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "run_serving_customers",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/kitchen_to_serving/serving_customers"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Magento2/serving"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-04T21:21:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/serving_orders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "run_serving_orders",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/kitchen_to_serving/serving_orders"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Magento2/serving"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-04T21:21:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/serving_products')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "run_serving_products",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/kitchen_to_serving/serving_products"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Magento2/serving"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-04T21:21:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/serving_sellers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "run_serving_sellers",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/kitchen_to_serving/serving_sellers"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Magento2/serving"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-04T21:21:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/serving_stores')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "run_serving_stores",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/kitchen_to_serving/serving_stores"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Magento2/serving"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-04T21:21:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/status_and_notify')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ambev_status_and_notify",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/ambev/ambev_status_and_notify"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Integration_3p1l/Sellers/Ambev"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/whatsapp_history')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "run_get_history",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/d-wp messages_history"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Chat-API"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-14T20:33:06Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDB_integration_3p1l')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cosmosdb_3p1l",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"colection": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": {
						"value": "@dataset().colection",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySql_GlobalHub')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GlobalHub_Prod",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySql_Magento2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Magento2_Reader_Prod",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySql_MenuPay')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MenuPay_Prod",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"layerName": {
						"type": "string"
					},
					"sourceName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@{item()}",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().layerName,'/',dataset().sourceName,'/',item())",
							"type": "Expression"
						},
						"fileSystem": "datalake-raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dw_integration_3p1l')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dw_integration_3p1l",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestionFull -MenuPay')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ListTables",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@split('payments,sales,payment_sale,payment_statuses,customers',',')",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "CopyFull",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "SELECT * FROM @{item()}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MySql_MenuPay",
											"type": "DatasetReference",
											"parameters": {
												"tableName": "@{item()}"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"layerName": "menu_raw",
												"sourceName": "payments"
											}
										}
									]
								},
								{
									"name": "exec_notebook-raw_to_kitchen",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "CopyFull",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/fabiotuller@outlook.com/prod/raw_to_kitchen/raw_to_kitchen_full",
										"baseParameters": {
											"on_id": "vazio",
											"source": "payments",
											"table_name": {
												"value": "@{item()}",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"source": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MenuPay/raw_kitchen"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-12T15:33:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MySql_MenuPay')]",
				"[concat(variables('factoryId'), '/datasets/ds_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestionFull')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ListTables",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@split('catalog_product_entity_datetime,catalog_product_entity_decimal,catalog_product_entity_int,catalog_product_entity_text,catalog_product_entity_varchar,cataloginventory_stock_item,customer_entity_datetime,customer_entity_decimal,customer_entity_int,customer_entity_text,customer_entity_varchar,mageplaza_webhook_history,quote_item,quote_payment,sales_creditmemo_comment,sales_creditmemo_item,sales_invoice_comment,sales_invoice_item,sales_order_address,sales_order_item,sales_order_payment,sales_order_status_history,sales_shipment_comment,sales_shipment_item,marketplace_orders',',')",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "CopyFull",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "SELECT * FROM @{item()}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MySql_Magento2",
											"type": "DatasetReference",
											"parameters": {
												"tableName": "@{item()}"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"layerName": "menu_raw",
												"sourceName": "magento"
											}
										}
									]
								},
								{
									"name": "exec_notebook-raw_to_kitchen",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "CopyFull",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/fabiotuller@outlook.com/prod/raw_to_kitchen/raw_to_kitchen_full",
										"baseParameters": {
											"on_id": "vazio",
											"source": "magento",
											"table_name": {
												"value": "@{item()}",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"source": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Magento2/raw_kitchen"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-14T17:27:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MySql_Magento2')]",
				"[concat(variables('factoryId'), '/datasets/ds_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestionFull_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ListTables",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@split('catalog_product_link_type,catalog_product_link,marketplace_product,catalog_product_entity_tier_price,cataloginventory_stock,catalog_category_product,catalog_category_entity_varchar,catalog_category_entity_text,catalog_category_entity_int,catalog_category_entity_datetime,catalog_category_entity,take_rate_seller_menu,inventory_reservation,sales_order_status,wishlist_item,wishlist,url_rewrite,search_query,salesrule_coupon,salesrule,payment_bank_slip_deadline,menu_supplier_payments,menu_supplier_credit,directory_country_region,customer_group,core_config_data,catalogrule,catalog_product_website,attendance_segments,store_website,store_group,store,merlin_integration_queue_orders,menu_salesman,marketplace_shippinglist,globalhub_distribution_centers,eav_attribute_option_value,eav_attribute_option,eav_attribute,admin_user_tp,admin_user',',')",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "CopyFull",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "SELECT * FROM @{item()}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MySql_Magento2",
											"type": "DatasetReference",
											"parameters": {
												"tableName": "@{item()}"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"layerName": "menu_raw",
												"sourceName": "magento"
											}
										}
									]
								},
								{
									"name": "exec_notebook-raw_to_kitchen",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "CopyFull",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/fabiotuller@outlook.com/prod/raw_to_kitchen/raw_to_kitchen_full",
										"baseParameters": {
											"on_id": "vazio",
											"source": "magento",
											"table_name": {
												"value": "@{item()}",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"source": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Magento2/raw_kitchen"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-12T15:41:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MySql_Magento2')]",
				"[concat(variables('factoryId'), '/datasets/ds_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestionIncremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ListTables",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@split('sales_invoice,sales_invoice_grid,sales_shipment,sales_shipment_grid,sales_creditmemo,sales_creditmemo_grid,sales_order,quote,customer_address_entity,catalog_product_entity,customer_entity',',')",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "CopyInc",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "SELECT * FROM @{item()} where updated_at between date_add(current_date(),interval -2 day) and date_add(current_date(),interval 1 day)",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MySql_Magento2",
											"type": "DatasetReference",
											"parameters": {
												"tableName": "@{item()}"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"layerName": "menu_raw",
												"sourceName": "magento"
											}
										}
									]
								},
								{
									"name": "exec_notebook-raw_to_kitchen",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "CopyInc",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/fabiotuller@outlook.com/prod/raw_to_kitchen/raw_to_kitchen_inc",
										"baseParameters": {
											"on_id": "vazio",
											"source": "magento",
											"table_name": {
												"value": "@{item()}",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Magento2/raw_kitchen"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-12T15:16:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MySql_Magento2')]",
				"[concat(variables('factoryId'), '/datasets/ds_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestion_GHub')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait 1min",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": "SELECT distinct\nid as entity_id, created_date as created_at, updated_date as updated_at, sku, seller_id, list_price, sale_price, promo_price, inventory, status, packing, \nCASE \n\twhen seller_id = 198 then 903266\n\twhen seller_id = 200 then 922788\n\twhen seller_id = 201 then 972636\nend magento_seller_id\nFROM product p where seller_id IN(198,200,201) "
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MySql_GlobalHub",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "product"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_parquet",
								"type": "DatasetReference",
								"parameters": {
									"layerName": "menu_raw",
									"sourceName": "globalhub/product"
								}
							}
						]
					},
					{
						"name": "exec_notebook-raw_to_kitchen",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/raw_to_kitchen/raw_to_kitchen_full_ghub",
							"baseParameters": {
								"on_id": "vazio",
								"source": "globalhub",
								"table_name": "product"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "run_merge_table_orders_price_stock_integration",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "exec_notebook-raw_to_kitchen",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/orders_price_stock_integration"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Wait 1min",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 60
						}
					}
				],
				"folder": {
					"name": "Integration_3p1l"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MySql_GlobalHub')]",
				"[concat(variables('factoryId'), '/datasets/ds_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integration_ambev')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ambev_produto",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/ambev/integration produto"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ambev_produto_pdv",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/ambev/integration produto_pdv"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ambev_produto_estoque",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/ambev/integration produto_estoque"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ambev_pdv",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/ambev/integration pdv"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ambev_condicao_pagto",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/ambev/integration condicao_pagto"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ambev_cdd",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/ambev/integration cdd"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get_unb_to_send_price",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ambev_produto_pdv",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"query": {
									"value": "@concat('select * from c where c.datetime between ', replace(concat('\"',getPastTime(10, 'Minute'),'\"'),'T',' '),' and ', replace(concat('\"',getPastTime(0, 'Minute'),'\"'),'T',' '))",
									"type": "Expression"
								},
								"preferredRegions": [],
								"detectDatetime": true
							},
							"dataset": {
								"referenceName": "CosmosDB_integration_3p1l",
								"type": "DatasetReference",
								"parameters": {
									"colection": "ambev_last_produto_pdv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "get_unb_to_send_pdv",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ambev_pdv",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"query": {
									"value": "@concat('select * from c where c.datetime between ', replace(concat('\"',getPastTime(10, 'Minute'),'\"'),'T',' '),' and ', replace(concat('\"',getPastTime(0, 'Minute'),'\"'),'T',' '))",
									"type": "Expression"
								},
								"preferredRegions": [],
								"detectDatetime": true
							},
							"dataset": {
								"referenceName": "CosmosDB_integration_3p1l",
								"type": "DatasetReference",
								"parameters": {
									"colection": "ambev_last_pdv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "get_unb_to_send_estoque",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ambev_produto_estoque",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"query": {
									"value": "@concat('select * from c where c.datetime between ', replace(concat('\"',getPastTime(10, 'Minute'),'\"'),'T',' '),' and ', replace(concat('\"',getPastTime(0, 'Minute'),'\"'),'T',' '))",
									"type": "Expression"
								},
								"preferredRegions": [],
								"detectDatetime": true
							},
							"dataset": {
								"referenceName": "CosmosDB_integration_3p1l",
								"type": "DatasetReference",
								"parameters": {
									"colection": "ambev_last_estoque"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "List unbs price",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_unb_to_send_price",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_unb_to_send_price').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "ambev_sending_price_ghub",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:30:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/fabiotuller@outlook.com/prod/ambev/ambev_load_pricing_sending_ghub",
										"baseParameters": {
											"unb": {
												"value": "@string(item().unb)",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "List unbs stock",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_unb_to_send_estoque",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_unb_to_send_estoque').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "ambev_sending_estoque_ghub",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:30:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/fabiotuller@outlook.com/prod/ambev/ambev_load_estoque_sending_ghub",
										"baseParameters": {
											"unb": {
												"value": "@string(item().unb)",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "List unbs pdv",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_unb_to_send_pdv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_unb_to_send_pdv').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "ambev_sending_pdv_ghub",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:30:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/fabiotuller@outlook.com/prod/ambev/ambev_load_pdv_sending_ghub",
										"baseParameters": {
											"unb": {
												"value": "@string(item().unb)",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Integration_3p1l/Sellers/Ambev"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CosmosDB_integration_3p1l')]"
			]
		}
	]
}