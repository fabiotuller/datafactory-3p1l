{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nome do Data Factory",
			"defaultValue": "datafactory-3p1l"
		},
		"trigger-24h_properties_ingestionFull_1_parameters_source": {
			"type": "string",
			"defaultValue": "magento"
		},
		"auto-trigger-10min_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/2c12d660-e733-48bc-97bd-d8528fdae002/resourceGroups/Eng-Datalake-3P1L/providers/Microsoft.Storage/storageAccounts/datalake3p1lprod"
		},
		"auto-trigger-1h_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/2c12d660-e733-48bc-97bd-d8528fdae002/resourceGroups/Eng-Datalake-3P1L/providers/Microsoft.Storage/storageAccounts/datalake3p1lprod"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ds_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"layerName": {
						"type": "string"
					},
					"sourceName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@{item()}",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().layerName,'/',dataset().sourceName,'/',item())",
							"type": "Expression"
						},
						"fileSystem": "datalake-raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestionFull -MenuPay')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ListTables",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@split('payments,sales,payment_sale,payment_statuses,customers',',')",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "CopyFull",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "SELECT * FROM @{item()}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MySql_MenuPay",
											"type": "DatasetReference",
											"parameters": {
												"tableName": "@{item()}"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"layerName": "menu_raw",
												"sourceName": "payments"
											}
										}
									]
								},
								{
									"name": "exec_notebook-raw_to_kitchen",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "CopyFull",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/fabiotuller@outlook.com/prod/raw_to_kitchen/raw_to_kitchen_full",
										"baseParameters": {
											"on_id": "vazio",
											"source": "payments",
											"table_name": {
												"value": "@{item()}",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"source": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MenuPay/raw_kitchen"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-12T15:33:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestionFull')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ListTables",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@split('catalog_product_entity_datetime,catalog_product_entity_decimal,catalog_product_entity_int,catalog_product_entity_text,catalog_product_entity_varchar,cataloginventory_stock_item,customer_entity_datetime,customer_entity_decimal,customer_entity_int,customer_entity_text,customer_entity_varchar,mageplaza_webhook_history,quote_item,quote_payment,sales_creditmemo_comment,sales_creditmemo_item,sales_invoice_comment,sales_invoice_item,sales_order_address,sales_order_item,sales_order_payment,sales_order_status_history,sales_shipment_comment,sales_shipment_item',',')",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "CopyFull",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "SELECT * FROM @{item()}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MySql_Magento2",
											"type": "DatasetReference",
											"parameters": {
												"tableName": "@{item()}"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"layerName": "menu_raw",
												"sourceName": "magento"
											}
										}
									]
								},
								{
									"name": "exec_notebook-raw_to_kitchen",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "CopyFull",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/fabiotuller@outlook.com/prod/raw_to_kitchen/raw_to_kitchen_full",
										"baseParameters": {
											"on_id": "vazio",
											"source": "magento",
											"table_name": {
												"value": "@{item()}",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"source": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Magento2/raw_kitchen"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-14T17:27:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestionFull_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ListTables",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@split('catalog_product_link_type,catalog_product_link,marketplace_product,catalog_product_entity_tier_price,cataloginventory_stock,catalog_category_product,catalog_category_entity_varchar,catalog_category_entity_text,catalog_category_entity_int,catalog_category_entity_datetime,catalog_category_entity,take_rate_seller_menu,inventory_reservation,sales_order_status,wishlist_item,wishlist,url_rewrite,search_query,salesrule_coupon,salesrule,payment_bank_slip_deadline,menu_supplier_payments,menu_supplier_credit,directory_country_region,customer_group,core_config_data,catalogrule,catalog_product_website,attendance_segments,store_website,store_group,store,merlin_integration_queue_orders,menu_salesman,marketplace_shippinglist,globalhub_distribution_centers,eav_attribute_option_value,eav_attribute_option,eav_attribute,admin_user_tp,admin_user',',')",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "CopyFull",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "SELECT * FROM @{item()}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MySql_Magento2",
											"type": "DatasetReference",
											"parameters": {
												"tableName": "@{item()}"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"layerName": "menu_raw",
												"sourceName": "magento"
											}
										}
									]
								},
								{
									"name": "exec_notebook-raw_to_kitchen",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "CopyFull",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/fabiotuller@outlook.com/prod/raw_to_kitchen/raw_to_kitchen_full",
										"baseParameters": {
											"on_id": "vazio",
											"source": "magento",
											"table_name": {
												"value": "@{item()}",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"source": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Magento2/raw_kitchen"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-12T15:41:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestionIncremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ListTables",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@split('sales_invoice,sales_invoice_grid,sales_shipment,sales_shipment_grid,sales_creditmemo,sales_creditmemo_grid,sales_order,quote,customer_entity,customer_address_entity,catalog_product_entity',',')",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "CopyInc",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "MySqlSource",
											"query": {
												"value": "SELECT * FROM @{item()} where updated_at between date_add(current_date(),interval -2 day) and date_add(current_date(),interval 1 day)",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MySql_Magento2",
											"type": "DatasetReference",
											"parameters": {
												"tableName": "@{item()}"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"layerName": "menu_raw",
												"sourceName": "magento"
											}
										}
									]
								},
								{
									"name": "exec_notebook-raw_to_kitchen",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "CopyInc",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/fabiotuller@outlook.com/prod/raw_to_kitchen/raw_to_kitchen_inc",
										"baseParameters": {
											"on_id": "vazio",
											"source": "magento",
											"table_name": {
												"value": "@{item()}",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Magento2/raw_kitchen"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-12T15:16:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_integration_1h')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "i_orchestrator_main_1h",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2021-06-02T00:30:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/orchestrator_main_10min')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dt_last_order",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": "select max(updated_at) as dt from sales_order"
							},
							"dataset": {
								"referenceName": "MySql_Magento2",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "sales_order"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "now_minus_30_minutes_greater-order or customer",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dt_last_order",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('dt_last_order').output.value[0].dt,addminutes(utcnow(),-30))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "False",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "True",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								},
								{
									"name": "run_ingestion_full",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "True",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ingestionFull",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"source": "magento"
										}
									}
								},
								{
									"name": "run_serving_customers",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "run_ingestion_full",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_ingestion_inc",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "serving_customer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "run_serving_orders",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "run_ingestion_full",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_ingestion_inc",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "serving_orders",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "run_serving_stores",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "run_ingestion_full",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_ingestion_inc",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "serving_stores",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "run_serving_sellers",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "run_ingestion_full",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_ingestion_inc",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "serving_sellers",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "run_serving_products",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "run_ingestion_inc",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_ingestion_full",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "serving_products",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "run_ingestion_inc",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "True",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ingestionIncremental",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "run_LogSystem",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "run_serving_orders",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_serving_stores",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_serving_sellers",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_serving_products",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_serving_customers",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "LogSystem",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-05-15T16:27:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ingestionFull')]",
				"[concat(variables('factoryId'), '/pipelines/ingestionIncremental')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/orchestrator_main_1h')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "run_gsheet_import",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "run_gsheets_import",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "run_ingestion_full_MenuPay",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ingestionFull -MenuPay",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"source": "payments"
							}
						}
					},
					{
						"name": "run_get_whatsapp_history",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "whatsapp_history",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "run_customer_cluster",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "magento_customer_cluster",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-05-13T00:20:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ingestionFull -MenuPay')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger-24h')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ingestionFull_1",
							"type": "PipelineReference"
						},
						"parameters": {
							"source": "[parameters('trigger-24h_properties_ingestionFull_1_parameters_source')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-05-04T22:00:00",
						"timeZone": "E. South America Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								21
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ingestionFull_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/auto-trigger-10min')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "orchestrator_main_10min",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/trigger-adf/blobs/",
					"blobPathEndsWith": "10min",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('auto-trigger-10min_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/orchestrator_main_10min')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/auto-trigger-1h')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "orchestrator_main_1h",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/trigger-adf/blobs/",
					"blobPathEndsWith": "1h",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('auto-trigger-1h_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/orchestrator_main_1h')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger-10min')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "orchestrator_main_10min",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 10,
						"startTime": "2021-05-05T15:00:00",
						"endTime": "2021-05-25T22:01:00",
						"timeZone": "E. South America Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/orchestrator_main_10min')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger-1h')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "orchestrator_main_1h",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2021-05-10T13:00:00",
						"timeZone": "E. South America Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/orchestrator_main_1h')]"
			]
		}
	]
}