{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nome do Data Factory",
			"defaultValue": "datafactory-3p1l"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/i_orchestrator_main_10min')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ambev_pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "integration_ambev",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "carrefour_pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "integration_carrefour",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"folder": {
					"name": "Integration_3p1l"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestion_GHub')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": "SELECT distinct\nid as entity_id, created_date as created_at, updated_date as updated_at, sku, seller_id, list_price, sale_price, promo_price, inventory, status, packing \nFROM product p where seller_id IN(198,200,201) "
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MySql_GlobalHub",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "product"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_parquet",
								"type": "DatasetReference",
								"parameters": {
									"layerName": "menu_raw",
									"sourceName": "globalhub/product"
								}
							}
						]
					},
					{
						"name": "exec_notebook-raw_to_kitchen",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/fabiotuller@outlook.com/prod/raw_to_kitchen/raw_to_kitchen_full",
							"baseParameters": {
								"on_id": "vazio",
								"source": "globalhub",
								"table_name": "product"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Integration_3p1l"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/orchestrator_main_10min')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dt_last_order",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": "select max(updated_at) as dt from sales_order"
							},
							"dataset": {
								"referenceName": "MySql_Magento2",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "sales_order"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "now_minus_30_minutes_greater-order or customer",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dt_last_order",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('dt_last_order').output.value[0].dt,addminutes(utcnow(),-30))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "False",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "True",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								},
								{
									"name": "run_ingestion_full",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "True",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ingestionFull",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"source": "magento"
										}
									}
								},
								{
									"name": "run_serving_customers",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "run_ingestion_full",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_ingestion_inc",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "serving_customer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "run_serving_orders",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "run_ingestion_full",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_ingestion_inc",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "serving_orders",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "run_serving_stores",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "run_ingestion_full",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_ingestion_inc",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "serving_stores",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "run_serving_sellers",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "run_ingestion_full",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_ingestion_inc",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "serving_sellers",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "run_serving_products",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "run_ingestion_inc",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_ingestion_full",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "serving_products",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "run_ingestion_inc",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "True",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ingestionIncremental",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "run_LogSystem",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "run_serving_orders",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_serving_stores",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_serving_sellers",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_serving_products",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "run_serving_customers",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "LogSystem",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false
									}
								}
							]
						}
					},
					{
						"name": "run_ingestion_GHub",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ingestion_GHub",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-05-15T16:27:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ingestion_GHub')]"
			]
		}
	]
}